#!/bin/bash

set -euo pipefail

BRANCH=$1

if [ -z "$BRANCH" ]; then
    echo "Usage: branch <branch-name>"
    exit 1
fi

# Only stash changes if there are uncommitted changes
STASH_CREATED=false
if ! git diff-index --quiet HEAD --; then
    git stash push -m "stashed by branch command" --include-untracked
    STASH_CREATED=true
fi

# Fetch the latest changes from the remote repository
git fetch --prune --prune-tags

# Check if the branch exists locally, if so switch to it
if git show-ref --verify --quiet "refs/heads/$BRANCH"; then
    git checkout $BRANCH

    # Check if the branch exists on the remote, if so pull the latest changes
    if git show-ref --verify --quiet "refs/remotes/origin/$BRANCH"; then
        git pull origin $BRANCH
    fi
else
    # Switch to main branch
    git checkout main

    # Pull the latest changes from main
    git pull

    # Create a new branch from main
    git checkout -b $BRANCH
fi

# Check if there are any stashed changes and pop them
if [ "$STASH_CREATED" = true ]; then
    if ! git stash pop; then
        echo "Warning: Failed to apply stashed changes. Use 'git stash list' to see stashes."
    fi
fi
